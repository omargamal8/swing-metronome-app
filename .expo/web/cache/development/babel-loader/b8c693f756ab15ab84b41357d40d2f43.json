{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/omar/swing-metronome-app/single-pulse-maker.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Main_beat_track from \"./assets/Main_beat_track.png\";\nimport playLogo from \"./assets/Play.png\";\nimport stopLogo from \"./assets/Stop.png\";\nexport var SinglePulseMaker = function (_Component) {\n  _inherits(SinglePulseMaker, _Component);\n\n  var _super = _createSuper(SinglePulseMaker);\n\n  function SinglePulseMaker(props) {\n    var _this;\n\n    _classCallCheck(this, SinglePulseMaker);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      pulse_time_left: 0,\n      playing: false,\n      timer: undefined,\n      total_pulses: 0\n    };\n    _this.id = Math.floor(Math.random() * 100);\n    console.log(\"SINGLE PULSE MAKER!!\", _this.id);\n    _this.handlePlayStopButton = _this.handlePlayStopButton.bind(_assertThisInitialized(_this));\n    _this.onPulse = _this.onPulse.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SinglePulseMaker, [{\n    key: \"onPulse\",\n    value: function onPulse() {\n      console.log(this.id, \"Internal tick number:\", this.state.total_pulses + 1);\n      this.setState({\n        total_pulses: this.state.total_pulses + 1\n      });\n      var new_timeout_left = this.props.onPulseCallback();\n      clearInterval(this.state.timer);\n      this.setState({\n        timer: setInterval(this.onPulse, new_timeout_left)\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.playing) {\n        this.setState({\n          timer: setInterval(onPulse, 600)\n        });\n      }\n    }\n  }, {\n    key: \"handlePlayStopButton\",\n    value: function handlePlayStopButton() {\n      if (this.state.playing) {\n        clearInterval(this.state.timer);\n        this.props.stopCleanUp();\n        this.setState({\n          playing: false\n        });\n      } else {\n        this.setState({\n          timer: setInterval(this.onPulse, 0),\n          playing: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, React.createElement(\"img\", {\n        src: Main_beat_track,\n        alt: \"main track\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }), !this.state.playing ? React.createElement(\"a\", {\n        style: {\n          position: \"absolute\",\n          left: \"40%\",\n          top: \"30%\"\n        },\n        onClick: this.handlePlayStopButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, React.createElement(\"img\", {\n        src: playLogo,\n        alt: \"play\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 110\n        }\n      })) : React.createElement(\"a\", {\n        style: {\n          position: \"absolute\",\n          left: \"30%\",\n          top: \"30%\"\n        },\n        onClick: this.handlePlayStopButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, React.createElement(\"img\", {\n        src: stopLogo,\n        alt: \"play\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 110\n        }\n      }))));\n    }\n  }]);\n\n  return SinglePulseMaker;\n}(Component);","map":{"version":3,"sources":["/home/omar/swing-metronome-app/single-pulse-maker.js"],"names":["React","Component","Main_beat_track","playLogo","stopLogo","SinglePulseMaker","props","state","pulse_time_left","playing","timer","undefined","total_pulses","id","Math","floor","random","console","log","handlePlayStopButton","bind","onPulse","setState","new_timeout_left","onPulseCallback","clearInterval","setInterval","stopCleanUp","position","left","top"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport Main_beat_track from './assets/Main_beat_track.png'\nimport playLogo from './assets/Play.png'\nimport stopLogo from './assets/Stop.png'\n\nexport class SinglePulseMaker extends Component{\n    constructor(props){\n        super(props)\n        this.state = {pulse_time_left:0, \n                      playing:false, \n                      timer:undefined,\n                      total_pulses:0 }\n        this.id = Math.floor(Math.random()*100)\n        console.log(\"SINGLE PULSE MAKER!!\", this.id)\n        this.handlePlayStopButton = this.handlePlayStopButton.bind(this)\n        this.onPulse = this.onPulse.bind(this)\n    }\n    \n    // console.log(\"==Single Pulse Maker==\", pulse_time_left, playing, onPulseCallback)\n    onPulse(){\n        console.log(this.id, \"Internal tick number:\", this.state.total_pulses+1)\n        this.setState({total_pulses:this.state.total_pulses+1})\n        const new_timeout_left = this.props.onPulseCallback()\n        clearInterval(this.state.timer)\n        this.setState({timer:setInterval(this.onPulse, new_timeout_left)})\n        // setPulseTimeLeft(new_timeout_left)\n        // setNextTickTimer(setTimeout(onPulse, new_timeout_left))\n\n    }\n        \n    componentDidMount(){\n        if(this.state.playing){\n            this.setState({timer:setInterval(onPulse, 600)})\n        }\n    }\n\n\n    \n\n    handlePlayStopButton(){\n        if(this.state.playing){\n           clearInterval(this.state.timer) \n           this.props.stopCleanUp()\n           this.setState({playing:false})\n        }\n        else{            \n            this.setState({timer:setInterval(this.onPulse, 0), playing:true})\n        }\n    }\n    render(){\n        return (<>\n                <div style={{position:\"relative\"}}>\n                <img src={Main_beat_track} alt=\"main track\" />\n                {(!this.state.playing)?\n                <a style={{position:\"absolute\", left:\"40%\", top:\"30%\"}} onClick={this.handlePlayStopButton} ><img src={playLogo} alt=\"play\" /></a>\n                :\n                <a style={{position:\"absolute\", left:\"30%\", top:\"30%\"}} onClick={this.handlePlayStopButton} ><img src={stopLogo} alt=\"play\" /></a>\n                }\n                </div>\n                \n        </>)\n    }\n}\n\n\n\n\n\n//   export default SinglePulseMaker"]},"metadata":{},"sourceType":"module"}